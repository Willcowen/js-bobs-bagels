BOB's Bagels

# Part 1
As a member of the public
So I can order a bagel when I want to
I'd like to add an item to my basket

As a member of the public,
So that I can change my order
I'd like to remove an item from my basket


# Part 2
As a member of the public,
So that I can not overfill my small bagel basket
I'd like to know when my basket is full when I try adding an item beyond my basket capacity.

As a Bob's Bagels manager,
So that I can record more sales
I’d like to create baskets with larger capacity when I need to.

As a member of the public
So that I can maintain my sanity
I'd like to know if I try to remove an item that doesn't exist in my basket. In the same way, I want to know if I try to add an item with the same ID already in my basket.


# Part 3
As a member of the public,
So that I can know how much my bagels are,
I’d like to see the price of each item before I add it to my basket.

As a member of the public,
So that I can prepare to pay
When I go to checkout I'd like to know the total sum of the bagels in my basket

Part One 

** Nouns hint at classes and verbs hint at Methods **

Objects (nouns) |  Messages (Methods)
I / Person      | order
Bagel           | -----
Basket          | addBagel() 
" "             | removeItem()


Objects (nouns) | Properties            | Messages (Methods)  | Output
I / Person      | name @string          | order               | ----
Bagel           | item @obj             | -----               | ----
Basket          | item @Array[@bagel]   | addBagel()          | @Array[BasketArray+addedbagels]
" "             |                       | removeItem()        | @Array[BasketArray-removedbagels]









METHODS (****) AND TESTS (----)

****
addToBasket(item);  

----
DONE - ADD ONE ITEM TO BASKET
DONE - ADD TWO ITEMS TO BASKET

****
removeItemFromBasket(item); 

----
REMOVE ONE ITEM FROM BASKET
REMOVE MULTIPLE ITEMS FROM BASKET

****
isBasketFull();

----
ADD ONE ITEM TO A FULL BASKET
ADD MULTIPLE ITEMS TO A HALF FULL BASKET SO IT BECOMES FULL


****
addToBasket(item) -- Adding an item that already exists in the basket (with same ID).

----




****
removeItemFromBasket(item) -- Removing an item that doesn't exist in basket.


----
?


****
createLargerBasket()

----
?

****
getPrice(item)


----
?

****
getBasketTotal()

----
?



